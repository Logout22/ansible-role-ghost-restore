---
- name: establish archive changed fact
  set_fact:
    archive_changed: False
- name: ensure user account exists
  user:
    name: "{{ user_name }}"
- name: ensure target directory exists
  file:
    path: "{{ target_directory }}"
    owner: "{{ user_name }}"
    state: directory
- name: gather information on source archive
  stat:
    path: "{{ source_file_download_path }}"
  register: source_archive_before
- name: install AWS S3 dependencies
  pip:
    name:
      - boto
      - boto3
      - botocore
- name: download archive from S3
  aws_s3:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    bucket: "{{ aws_s3_bucket_name }}"
    mode: get
    dest: "{{ source_file_download_path }}"
    object: "{{ source_file }}"
  # we need to gather archive_changed explicitly
  changed_when: False
- name: gather information on downloaded archive
  stat:
    path: "{{ source_file_download_path }}"
  register: source_archive_after
- name: evaluate archive changed fact
  set_fact:
    archive_changed: True
  when: >
      source_archive_before.stat.checksum is not defined or
      source_archive_before.stat.checksum != source_archive_after.stat.checksum
